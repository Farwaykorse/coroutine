#
#   Author
#     - luncliff@gmail.com
#   Reference
#     - https://www.appveyor.com/docs/appveyor-yml/
#     - https://github.com/appveyor/ci/issues/899#issuecomment-230360978
#
version: 1.4.{build}

clone_script:  
  - ps: git clone -q --recursive --branch $env:APPVEYOR_REPO_BRANCH https://github.com/$env:APPVEYOR_REPO_NAME.git $env:APPVEYOR_BUILD_FOLDER

notifications:
  - provider: Email
    to:
      - luncliff@gmail.com

image:
  - Visual Studio 2017

platform:
  - x64

configuration:
  - Debug
  - Release

environment:
  matrix:
    - compiler: msvc
    - compiler: clang

matrix:
  allow_failures:
    - image: Visual Studio 2017
      compiler: clang

for:
  # MSVC: use Visual Studio solution file
  - matrix:
      only:
        - image: Visual Studio 2017
          compiler: msvc
    install:
      - ps: Write-Host $env:PLATFORM $env:CONFIGURATION $env:APPVEYOR_BUILD_FOLDER
    build:
      parallel: true
      project: coroutine.sln
      verbosity: quiet
    after_build:
      # Rename the variable for build output
      - ps: if( $env:PLATFORM -eq "x86" ){ $env:PLATFORM="Win32"; }
      - ps: tree /F ./$env:PLATFORM
    before_test:
      - ps: $TestDLL= "$env:APPVEYOR_BUILD_FOLDER/$env:PLATFORM/$env:CONFIGURATION/coroutine_vstest.dll"
    test_script:
      - ps: vstest.console.exe $TestDLL

  # clang-cl: use CMake + Ninja + Clang
  # The build step expects cmdlet environment...
  - matrix:
      only:
        - image: Visual Studio 2017
          compiler: clang
    install:
      - ps: Write-Host $env:APPVEYOR_BUILD_FOLDER
      - ps: choco install --no-progress ninja   # Download Ninja with chocolaty package manager
      - ps: choco info    llvm    # LLVM is already installed. So just show the version info
      # Rename the variable for build output
      - ps: if( $env:PLATFORM -eq "x86" ){ $env:PLATFORM="Win32" }
    before_build:
      - ps: clang-cl --version # <-- cl.exe for clang
      - ps: Write-Host $env:PLATFORM $env:CONFIGURATION
    build_script:
      - ps: New-Item -Name build -ItemType Directory
      - ps: Push-Location -Path build
      - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
      - cmd: set CXX=clang-cl # ps: $env:CXX = "clang-cl"
      # for cmake, "-DCMAKE_CXX_COMPILER=clang-cl" can be ok
      - cmd: cmake ../ -G Ninja -DBUILD_SHARED_LIBS=false -DCMAKE_BUILD_TYPE=%configuration% -DCMAKE_INSTALL_PREFIX=../install/%platform%/%configuration%
      - cmd: cmake --build .
      - cmd: cmake --build . --target install
    # after_build:
    #   - ps: Pop-Location
    test_script:
      - ps: ctest --output-on-failure
