#
#   Author
#     - luncliff@gmail.com
#
sudo: false

git:
  submodules: true
  depth: 5

notifications:
  email:
    - luncliff@gmail.com

language: cpp
compiler: clang # expect 5.0+, recommend 6.0

addons:
  homebrew:
    packages:
      - ninja
      - tree
      - cmake

  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-xenial-6.0
      # - llvm-toolchain-xenial-7 # already installed
    packages:
      - g++-7
      - g++-8
      - clang-6.0
      - llvm-6.0-tools
      - libc++-dev
      - libc++abi-dev
      - unzip
      - ninja-build
      - tree
      - cmake

install:
  - echo ${TRAVIS_OS_NAME};
  - if [ ${TRAVIS_OS_NAME} == "linux" ]; then
    sudo bash ./scripts/install-compilers.sh;
    sudo bash ./scripts/install-cmake-3.14.sh;
    sudo bash ./scripts/install-libc++8.sh;
    sudo rm -rf prebuilt libcxx* llvm*;
    sudo rm -rf cmake-3.14*;
    fi
  - if [ ${TRAVIS_OS_NAME} == "osx" ]; then
    brew info llvm;
    fi
script:
  - mkdir -p build && cd build;
  - cmake ../
    -G "Ninja"
    -DBUILD_SHARED_LIBS=${SHARED}
    -DCMAKE_BUILD_TYPE=${CONFIG}
    -DCMAKE_INSTALL_PREFIX=/Users/travis/install
    -DCMAKE_CXX_COMPILER=${CXX}
  - ninja install;
  - ./test/coroutine_test;
  - cd -;
after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - tree ./install

matrix:
  allow_failures:
    - os: windows

  include:
    - name: Mac Debug
      os: osx
      osx_image: xcode10.2
      env:
        - CONFIG=Debug    SHARED=true

    - name: Mac Release
      os: osx
      osx_image: xcode10.2
      env:
        - CONFIG=Release  SHARED=true

    - name: Ubuntu(Xenial) Debug
      os: linux
      dist: xenial
      env:
        - CONFIG=Debug    SHARED=true

    - name: Ubuntu(Xenial) Release 
      os: linux
      dist: xenial
      env:
        - CONFIG=Release  SHARED=true

    - name: iPhone OS
      os: osx
      osx_image: xcode10.1
      compiler: clang
      script:
        - mkdir -p build && cd build;
        - cmake ../
          -DBUILD_SHARED_LIBS=$SHARED
          -DCMAKE_BUILD_TYPE=$CONFIG
          -DCMAKE_INSTALL_PREFIX=/Users/travis/install
          -DCMAKE_TOOLCHAIN_FILE=../external/ios-cmake/ios.toolchain.cmake
          -DENABLE_BITCODE=false
          -DIOS_DEPLOYMENT_TARGET=10.13
        - make install;
        - cd -;
      after_success:
        - tree ./install;
