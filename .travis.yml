# ---------------------------------------------------------------------------
#
#   Author
#     - luncliff@gmail.com
#   Reference
#     - https://docs.travis-ci.com/user/languages/cpp/
#     - https://libcxx.llvm.org/docs/BuildingLibcxx.html
#     - http://rkh.github.io/travis-encrypt/public/index.html
#     - https://blog.kowalczyk.info/article/k/how-to-install-latest-clang-6.0-on-ubuntu-16.04-xenial-wsl.html
#
# ---------------------------------------------------------------------------
sudo: false

git:
  submodules: true
  depth: 5

notifications:
  email:
    - luncliff@gmail.com

language: cpp
compiler: clang  # expect 5.0+

addons:
  chocolatey:
    packages:
      - llvm
      - ninja

  homebrew:
    packages:
      - ninja
      - tree

  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-xenial-6.0
    packages:
      - gcc-7
      - g++-7
      - clang-6.0
      - llvm-6.0-tools
      - libc++-dev
      - libc++abi-dev
      - unzip
      - ninja-build
      - tree
      - cmake

install:
  - echo ${TRAVIS_OS_NAME};
  - if [ ${TRAVIS_OS_NAME} == "linux" ]; then
      sudo bash ./scripts/install-libc++.sh;
      sudo rm -rf prebuilt libcxx* llvm*;
    fi
  - if [ ${TRAVIS_OS_NAME} == "osx" ]; then
      brew info llvm;
    fi
  - if [ ${TRAVIS_OS_NAME} == "windows" ]; then
      choco info llvm;
    fi    
script:
  - mkdir -p build && pushd build;
  - cmake ../ 
      -G "Ninja" 
      -DBUILD_SHARED_LIBS=$SHARED 
      -DCMAKE_BUILD_TYPE=$CONFIG
      -DCMAKE_INSTALL_PREFIX=../install
  - ninja install
  # windows: move dll
  - if [ ${TRAVIS_OS_NAME} == "windows" ]; then
      cp ./modules/coroutine.dll ./test;
    fi
  - ./test/coroutine_test
  - popd;
after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - tree ./install

matrix: 
  allow_failures:
    - os: windows
  include:
    - name: "iPhone OS"
      os: osx
      osx_image: xcode10.1
      compiler: clang
      script:
        - mkdir -p build && pushd build;
        - cmake ../ 
            -DBUILD_SHARED_LIBS=$SHARED 
            -DCMAKE_BUILD_TYPE=$CONFIG
            -DCMAKE_INSTALL_PREFIX=../install
            -DCMAKE_TOOLCHAIN_FILE=../external/ios-cmake/ios.toolchain.cmake
            -DENABLE_BITCODE=false
            -DIOS_DEPLOYMENT_TARGET=10.13
        - make install
      after_success:
        - tree --version

    # - name: "Android"
    #   language: android
    #   android:
    #     components:
    #       - tools
    #       - platform-tools
    #       - android-27
    #   install:
    #     - curl -s "https://get.sdkman.io" | bash > /dev/null
    #     - source "$HOME/.sdkman/bin/sdkman-init.sh"
    #     - sdk version
    #     - sdk install gradle 5.1.1
    #   script:
    #     - gradle --version
    #   after_success:
    #     - tree --version

    - name: Mac Debug Shared
      os: osx
      osx_image: xcode10.1
      env:
       - CONFIG=Debug    SHARED=true

    - name: Mac Release Shared
      os: osx
      osx_image: xcode10.1
      env:
       - CONFIG=Release  SHARED=true

    - name: Ubuntu(Xenial) Debug Shared
      os: linux
      dist: xenial
      env:
       - CONFIG=Debug    SHARED=true
      before_script:
       - export CC=clang-6.0 CXX=clang-6.0;

    - name: Ubuntu(Xenial) Release Shared
      os: linux
      dist: xenial
      env:
       - CONFIG=Release  SHARED=true
      before_script:
       - export CC=clang-6.0 CXX=clang-6.0;

    - name: Windows clang-cl Debug
      os: windows
      dist: 1803-containers
      env:
       - CONFIG=Debug  SHARED=true
      before_script:
       - choco install -y ninja
       - set CXX=clang-cl

    - name: Windows clang-cl Release
      os: windows
      dist: 1803-containers
      env:
       - CONFIG=Release  SHARED=true
      before_script:
       - choco install -y ninja
       - set CXX=clang-cl
