#
# Author: github.com/luncliff (luncliff@gmail.com)
#
# References
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops#passing-parameters
#

jobs:
  - job: VS${{ parameters.visualstudio }}Clang8
    pool:
      vmImage: "vs2017-win2016"
    steps:
      - task: PowerShell@2
        inputs:
          targetType: "inline"
          script: git submodule update --init --recursive;
      - task: ChocolateyCommand@0
        inputs:
          command: "install"
          installPackageId: "ninja"
          installInstallArgs: "--no-progress --yes"
      - task: ChocolateyCommand@0
        inputs:
          command: "install"
          installPackageId: "llvm"
          installInstallArgs: "--no-progress --yes --force --allow-downgrade --version 8.0.1"
      - task: BatchScript@1
        inputs:
          filename: "./scripts/build-vs2017-cmake-clang.bat"
        env:
          SHARED: False
          BUILD_TYPE: Debug

  - job: VS${{ parameters.visualstudio }}MSVC
    pool:
      vmImage: "vs2017-win2016"
    variables:
      configuration: debug
      platform: x64
    steps:
      - task: PowerShell@2
        inputs:
          targetType: "inline"
          script: systeminfo;
      - task: PowerShell@2
        inputs:
          targetType: "inline"
          script: git submodule update --init --recursive;
      - task: MSBuild@1
        inputs:
          solution: ${{ parameters.solution }}
          msbuildArchitecture: $(platform)
          platform: $(platform)
          configuration: $(configuration)
          msbuildArguments: "/p:platformtoolset=v141"
      - task: VSTest@2
        inputs:
          testAssemblyVer2: |
            **\*vstest*.dll
          codeCoverageEnabled: true

  - job: SonarCloud
    pool:
      vmImage: "vs2017-win2016"
    variables:
      configuration: debug
      platform: x64
    steps:
      - task: PowerShell@2
        inputs:
          targetType: "inline"
          script: git submodule update --init --recursive;

      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: "luncliff-sonarcloud"
          organization: "luncliff-github"
          scannerMode: "MSBuild"
          projectKey: "luncliff_coroutine"
          projectName: "luncliff-coroutine"
          projectVersion: "1.5"
          # same with 'sonar-project.properties'
          extraProperties: |
            sonar.login=$(sonarcloud-login-key)
            sonar.sourceEncoding=UTF-8
            sonar.cpp.std=c++17
            sonar.cfamily.threads=2
            # see 'scripts/sonar-wrapper-build.ps1'
            sonar.cfamily.build-wrapper-output=bw-output
            # see 'scripts/create-coverage-xml.ps1'
            sonar.cfamily.vscoveragexml.reportsPath=**/luncliff-coroutine.coveragexml

      - task: PowerShell@2
        inputs:
          filePath: "scripts/sonar-wrapper-download.ps1"
      - task: PowerShell@2
        inputs:
          filePath: "scripts/sonar-wrapper-build.ps1"
      - task: VSTest@2
        inputs:
          testAssemblyVer2: |
            **\*vstest*.dll
          codeCoverageEnabled: true
      - task: PowerShell@2
        inputs:
          filePath: "scripts/create-coverage-xml.ps1"
        continueOnError: true
      - task: SonarCloudAnalyze@1
        continueOnError: true
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: "300"
        continueOnError: true
